@use '/styles/animations';
@use '/styles/breakpoints';
@use '/styles/colors';
@use '/styles/typography';

@import url('https://fonts.googleapis.com/css2?family=Borel&family=Comic+Neue:wght@700&family=Indie+Flower&family=Merriweather&family=Montserrat&family=Pacifico&family=Playfair+Display&family=Poppins&family=Press+Start+2P&family=Satisfy&display=swap');

.scene {
  width: calc(100% - 24px - 24px);
  max-width: 640px;
  aspect-ratio: 1;
  perspective: calc(100dvh + 100dvw);

  .container {
    width: 100%;
    height: 100%;
    transition: scale 0.1s ease-in-out, transform 1s;
    transform-style: preserve-3d;

    &:hover {
      scale: 1.01;
      cursor: pointer;
    }

    &:active {
      scale: 0.99;
      cursor: pointer;
    }

    .front {
      width: 100%;
      height: 100%;
      position: absolute;
      top: 0;
      left: 0;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      gap: 24px;
      color: colors.$text-tertiary;
      background: colors.$just-white;
      object-fit: fill;
      backface-visibility: hidden;

      >p {
        padding: 0 64px;
        @include typography.text-base;
        @include typography.text-lg;
        @include typography.text-semibold;
        text-align: center;
      }

      >svg {
        width: 96px;
        height: 96px;
      }

      @media screen and (max-width: breakpoints.$phone) {

        >p {
          padding: 0 24px;
          @include typography.text-md;
        }

        >svg {
          width: 48px;
          height: 48px;
        }
      }
    }

    .back {
      width: 100%;
      height: 100%;
      padding: 48px;
      position: absolute;
      top: 0;
      left: 0;
      line-height: auto;
      white-space: break-spaces;
      overflow-wrap: break-word;
      overflow-x: hidden;
      overflow-y: scroll;
      backface-visibility: hidden;
      transform: rotateY(180deg);

      &.fontSmall {
        font-size: 20px;
      }

      &.fontMedium {
        font-size: 24px;
      }

      &.fontLarge {
        font-size: 30px
      }

      &.GeneralSans {
        font-family: initial;
      }

      &.Poppins {
        font-family: 'Poppins';
      }

      &.Montserrat {
        font-family: 'Montserrat';
      }

      &.ComicSans {
        font-family: 'Comic Neue';
      }

      &.PressStart2P {
        font-family: 'Press Start 2P';
        line-height: 150%;
      }

      &.IndieFlower {
        font-family: 'Indie Flower';
      }

      &.Pacifico {
        font-family: 'Pacifico';
      }

      &.Satisfy {
        font-family: 'Satisfy';
      }

      &.Borel {
        font-family: 'Borel';
      }

      &.Merriweather {
        font-family: 'Merriweather';
      }

      &.PlayfairDisplay {
        font-family: 'PlayfairDisplay';
      }

      @media screen and (max-width: breakpoints.$phone) {
        padding: 24px;

        &.fontSmall {
          font-size: 16px;
        }

        &.fontMedium {
          font-size: 20px;
        }

        &.fontLarge {
          font-size: 24px
        }
      }
    }

    >.onboarding {
      width: 100%;
      height: 100%;
      padding: 48px;
      position: absolute;
      top: 0;
      left: 0;
      display: flex;
      flex-direction: column;
      justify-content: center;
      background: #000000a0;
      @include typography.text-base;
      @include typography.text-2xl;
      @include typography.text-semibold;
      text-align: center;
      color: #ffffffa0;
      opacity: 0;
      animation: animations.$fadeIn;
      animation-delay: 1s;
      animation-fill-mode: forwards;
    }
  }

  &.isPreview {

    &:hover {
      scale: 1 !important;
      cursor: default;
    }

    &:active {
      scale: 1 !important;
      cursor: default;
    }
  }

  // DEPENDENCY TO: width of CardControls
  @media screen and (max-height: 880px) and (min-width: 688px) {
    /* tag top margin, tag height, tag margin bottom, card margin bottom */
    height: calc(100dvh - (16px + 80px + 24px + 24px + 48px));
    //   /* follow height, aspect-ratio property only works with width */
    max-width: none;
    width: calc(100dvh - (16px + 80px + 24px + 24px + 48px));

    &.isPreview {
      width: 100%;
      height: 100%;
    }
  }
}
